digraph prog {
node1 [ label = " test/test.c " ];node1 -> node2
node2 [ label = " FunctionDec " ];node2 -> node3
node2 -> node4
node3 [ label = " int " ];
node4 [ label = " add " ];
node2 -> node5
node5 [ label = " Params " ];node5 -> node6
node5 -> node7
node6 [ label = " int " ];
node7 [ label = " a " ];
node5 -> node8
node5 -> node9
node8 [ label = " int " ];
node9 [ label = " b " ];

node2 -> node10
node10 [ label = " BlockStmt " ];node10 -> node11
node11 [ label = " ReturnStmt " ];node11 -> node12
node12 [ label = " return " ];
node11 -> node13
node13 [ label = " xxx " ];



node1 -> node14
node14 [ label = " FunctionDec " ];node14 -> node15
node14 -> node16
node15 [ label = " int " ];
node16 [ label = " sub " ];
node14 -> node17
node17 [ label = " Params " ];node17 -> node18
node17 -> node19
node18 [ label = " int " ];
node19 [ label = " a " ];
node17 -> node20
node17 -> node21
node20 [ label = " int " ];
node21 [ label = " b " ];

node14 -> node22
node22 [ label = " BlockStmt " ];node22 -> node23
node23 [ label = " ReturnStmt " ];node23 -> node24
node24 [ label = " return " ];
node23 -> node25
node25 [ label = " xxx " ];



node1 -> node26
node26 [ label = " FunctionDec " ];node26 -> node27
node26 -> node28
node27 [ label = " int " ];
node28 [ label = " main " ];
node26 -> node29
node29 [ label = " BlockStmt " ];node29 -> node30
node30 [ label = " VariableDec " ];node30 -> node31
node30 -> node32
node31 [ label = " int " ];
node32 [ label = " x " ];

node29 -> node33
node33 [ label = " VariableDec " ];node33 -> node34
node33 -> node35
node34 [ label = " int " ];
node35 [ label = " y " ];

node29 -> node36
node36 [ label = " AssignmentExpr " ];node36 -> node37
node36 -> node39
node36 -> node40
node37 [ label = " Variable " ];node37 -> node38
node38 [ label = " x " ];

node39 [ label = " = " ];
node40 [ label = " IntLiteral " ];node40 -> node41
node41 [ label = " 10 " ];


node29 -> node42
node42 [ label = " AssignmentExpr " ];node42 -> node43
node42 -> node45
node42 -> node46
node43 [ label = " Variable " ];node43 -> node44
node44 [ label = " y " ];

node45 [ label = " = " ];
node46 [ label = " IntLiteral " ];node46 -> node47
node47 [ label = " 53 " ];


node29 -> node48
node48 [ label = " ReturnStmt " ];node48 -> node49
node49 [ label = " return " ];
node48 -> node50
node50 [ label = " xxx " ];




}